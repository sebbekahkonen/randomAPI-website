{"remainingRequest":"/Users/sebastiankahkonen/Desktop/Allamappar/ownProjects-Knowe/test-website/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/sebastiankahkonen/Desktop/Allamappar/ownProjects-Knowe/test-website/src/views/Profile/Profile.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/sebastiankahkonen/Desktop/Allamappar/ownProjects-Knowe/test-website/src/views/Profile/Profile.vue","mtime":1636362437698},{"path":"/Users/sebastiankahkonen/Desktop/Allamappar/ownProjects-Knowe/test-website/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/sebastiankahkonen/Desktop/Allamappar/ownProjects-Knowe/test-website/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/sebastiankahkonen/Desktop/Allamappar/ownProjects-Knowe/test-website/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/sebastiankahkonen/Desktop/Allamappar/ownProjects-Knowe/test-website/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKCWRhdGE6ICgpID0+ICh7CgkJYXBpOiAnaHR0cHM6Ly9yYW5kb211c2VyLm1lL2FwaS8nLAoJCWFwaVZhbHVlOiBbXSwKCQllcnJvck1lc3NhZ2U6ICcnCgl9KSwKCWFzeW5jIGNyZWF0ZWQoKSB7CgkJYXdhaXQgdGhpcy5nZXRSYW5kb21Vc2VyKCk7Cgl9LAoJbWV0aG9kczogewoJCWFzeW5jIGdldFJhbmRvbVVzZXIoKSB7CgkJCXRoaXMuZXJyb3JNZXNzYWdlID0gJyc7CgkJCXRyeSB7CgkJCQljb25zdCByZXNwb25zZSA9IGF3YWl0IHRoaXMuJGh0dHAuZ2V0KHRoaXMuYXBpKTsKCgkJCQl0aGlzLmFwaVZhbHVlID0gcmVzcG9uc2UuZGF0YS5yZXN1bHRzWzBdOwoJCQl9IGNhdGNoIChlcnIpIHsKCQkJCXRoaXMuZXJyb3JNZXNzYWdlID0gJ3NvbWV0aGluZyB3ZW50IHdyb25nJzsKCQkJfQoJCX0sCgkJdGVzdCgpIHsKCQkJY29uc29sZS5sb2codGhpcy5hcGlWYWx1ZSk7CgkJfQoJfQp9Owo="},{"version":3,"sources":["Profile.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Profile.vue","sourceRoot":"src/views/Profile","sourcesContent":["<template>\n\t<div>\n\t\t<h1 align=\"center\" class=\"mt-8\">{{ apiValue.name.first +\" \"+ apiValue.name.last }}</h1>\n\t\t<v-container align=\"center\">\n\t\t\t<v-row align=\"center\" justify=\"center\">\n\t\t\t\t<v-avatar class=\"mt-8\" size=\"178\">\n\t\t\t\t\t<img\n\t\t\t\t\t\t:src=\"apiValue.picture.large\"\n\t\t\t\t\t\talt=\"random\"\n\t\t\t\t\t>\n\t\t\t\t</v-avatar>\n\t\t\t</v-row>\n\t\t</v-container>\n\t\t<h2 align=\"center\" class=\"mt-8\">Age: {{ apiValue.dob.age }}</h2>\n\t\t<h2 align=\"center\" class=\"mt-8\">{{ apiValue.email }}</h2>\n\t\t<h2 align=\"center\" class=\"mt-8\">Cell: {{ apiValue.cell }}</h2>\n\t</div>\n</template>\n<script>\nexport default {\n\tdata: () => ({\n\t\tapi: 'https://randomuser.me/api/',\n\t\tapiValue: [],\n\t\terrorMessage: ''\n\t}),\n\tasync created() {\n\t\tawait this.getRandomUser();\n\t},\n\tmethods: {\n\t\tasync getRandomUser() {\n\t\t\tthis.errorMessage = '';\n\t\t\ttry {\n\t\t\t\tconst response = await this.$http.get(this.api);\n\n\t\t\t\tthis.apiValue = response.data.results[0];\n\t\t\t} catch (err) {\n\t\t\t\tthis.errorMessage = 'something went wrong';\n\t\t\t}\n\t\t},\n\t\ttest() {\n\t\t\tconsole.log(this.apiValue);\n\t\t}\n\t}\n};\n</script>\n<style>\n\t\n</style>"]}]}